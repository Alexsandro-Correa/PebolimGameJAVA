package br.com.alexsandro.gamepebolim.players;

import java.awt.Graphics;
import java.awt.image.BufferedImage;

import br.com.alexsandro.gamepebolim.Game;
import br.com.alexsandro.gamepebolim.sprites.Logos;

public class TeamB extends Entity {

	public int width, height;
	public static boolean up = false, down = false, left = false, right = false, movedUp = true, movedDown = true;
	public static double speed = 0.05;
	public static byte gol = 0, maxGol = 5, finalGol;
	public static boolean cpu = false;

	public static BufferedImage rightPlayerB;
	public static BufferedImage leftPlayerB;
	public static BufferedImage centerPlayerB;
	public static BufferedImage logo;

	public TeamB(int x, int y, int width, int height, BufferedImage sprite) {
		super(x, y, width, height, sprite);
	}

	public void tick() {
		if (cpu) {
			iA();
		}
		// left = false;
		// right = false;
		if (up == true && movedUp == true)

		{
			movedDown = true;
			for (int i = 0; i < Game.teamB.length; i++) {
				Game.teamB[i].y -= speed;
			}

			if (y <= 27) {
				movedUp = false;
			}
		}

		if (down == true && movedDown == true) {
			movedUp = true;
			for (int i = 0; i < Game.teamB.length; i++) {
				Game.teamB[i].y += speed;
			}

			if (y > 86) {
				movedDown = false;
			}
		}
	}

	public void iA() {

		speed = 0.04;
		for (int i = 0; i < Game.teamB.length; i++) {
			if (Game.teamB[i].y > Game.ball.y - 7 && Game.teamB[0].y < Game.ball.y + 15) {
				if (!Game.ball.isCollidingTb((int) Game.teamB[0].x, (int) Game.teamB[0].y)) {
					down = true;
					up = false;
				}
			}

			if (Game.teamB[i].y > Game.ball.y + 15 && Game.teamB[0].y < Game.ball.y + 30) {
				if (!Game.ball.isCollidingTb((int) Game.teamB[0].x, (int) Game.teamB[0].y)) {
					up = true;
					down = false;
				}
			}
		}

		if (Game.ball.isCollidingTb((int) Game.teamB[0].x, (int) Game.teamB[0].y))

		{
			up = false;
			down = false;
			if (Game.rand.nextInt(100) < 70) {
				left = true;
				right = false;
			} else {
				right = true;
				left = false;
			}
		} else {
			left = false;
			right = false;
		}
	}

	public void render(Graphics g) {

		if (TeamB.left == true) {
			g.drawImage(TeamB.rightPlayerB, getX() * Game.SCALE, getY() * Game.SCALE, 16 * Game.SCALE, 16 * Game.SCALE,
					null);
		} else if (TeamB.right == true) {
			g.drawImage(TeamB.leftPlayerB, getX() * Game.SCALE, getY() * Game.SCALE, 16 * Game.SCALE, 16 * Game.SCALE,
					null);
		} else if (TeamB.right == false && TeamB.left == false) {
			g.drawImage(TeamB.centerPlayerB, getX() * Game.SCALE, getY() * Game.SCALE, 16 * Game.SCALE, 16 * Game.SCALE,
					null);
		}

	}
}
